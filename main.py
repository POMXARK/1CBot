import telebot
import config
import random
from telebot import types
from expiration_date import expiration_date
from decimal import Decimal

# update
### Deploy HEROKU ###
"""
heroku login
git init
git push heroku master
"""
global text_1, info_1, info_3, info_4
key_1 = "–ò–Ω—Ñ–æ"
key_2 = "–ü–µ—Ä–µ—Å–æ—Ä—Ç/–£—Ü–µ–Ω–∫–∞"
key_3 = "–í–ê–ñ–ù–û!!!"
key_4 = "–ù–ê–ß–ê–õ–û –î–ù–Ø (–ù–ï–¢ –í–¢–û–†–û–ì–û –ß–ï–õ)!!!"
info_1 = "–ö–æ–≥–¥–∞ –ø—Ä–∏–Ω–µ—Å–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω (–¢–°–î) –í—ã–±–µ—Ä–∏—Ç–µ:\n–ü–µ—á–∞—Ç—å —ç—Ç–∏–∫–µ—Ç–æ–∫ –∏ —Ü–µ–Ω–Ω–∏–∫–æ–≤ -> –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∏–∑ –¢–°–î -> –≤—ã–≥—Ä—É–∂–∞—Ç—å –ø—É—Å—Ç—ã–µ " \
         "—Å—Ç—Ä–æ–∫–∏ -> –≤—ã–≤–æ–¥–∏—Ç—å –æ—Ç—á–µ—Ç -> –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –∏–∑ –¢–°–î\n(–ø–æ—Å–ª–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¢–°–î) "
info_2 = "20%\n —Ö–ª–µ–±: –±–æ—Ä–æ–¥–∏–Ω—Å–∫–∏–π, –∑–µ—Ä–Ω–æ–≤–æ–π, –±–∞—Ç–æ–Ω –Ω–∞—Ä–µ–∑–Ω–æ–π, —Ö–ª–µ–± 1 —Å–æ—Ä—Ç, 2 —Å–æ—Ä—Ç.\n 30%\n —Ö–ª–µ–± –∫—É–ø–µ—á–µ—Å–∫–∏–π"
info_3 = "–∫–ª–±-–∫–æ–ª–±–∞—Å–∞(–∫–≥) —Å –∫–æ–ª–±–∞—Å–∞–º–∏ –∑–∞—Ö–æ–¥–∏—Ç—å –≤ ... (–ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–∞—Ç—É),\n–ø—Ñ–∑ - –ø–æ–ª—É—Ñ–∞–±—Ä–∏–∫–∞—Ç—ã,\n–¥–ª–º-–¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã"
info_4 = "–¢–µ—Ä–µ—â–µ–Ω–∫–æ –ê.–Æ (–ò–ü –¢–ê–Æ) - —Ç–æ—Ä—Ç—ã (—Ü–µ–Ω–Ω–∏–∫ —Å –¥–∞—Ç–∞–º–∏, —Å–µ–≥–æ–¥–Ω—è 8:00), –ø–∏—Ä–æ–∂–Ω–æ–µ, —Å–∞–ª–∞—Ç—ã. –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏(–∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—ã) - " \
         "...\n–ú–∏—Ä " \
         "–ø—Ä–æ–¥—É–∫—Ç–æ–≤ "
bot = telebot.TeleBot(config.TOKEN)

keyboard = types.ReplyKeyboardMarkup()  # –æ–±–Ω–æ–≤–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É


@bot.message_handler(commands=['start'])  # –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ * –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫
def welcome(message):
    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
    item1 = types.KeyboardButton("üé≤")
    item2 = types.KeyboardButton(key_1)
    item4 = types.KeyboardButton(key_2)
    item5 = types.KeyboardButton(key_3)
    item6 = types.KeyboardButton(key_4)
    item3 = types.KeyboardButton("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –≥–æ–¥–Ω–æ—Å—Ç–∏")
    markup.add(item1, item2, item3, item4, item5,item6 )

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å "
                     "–ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == "text_1":
            # bot.send_message(message.chat.id, str(random.randint(0, 100)))
            sent_msg = bot.send_message(message.chat.id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?")
        elif message.text == '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –≥–æ–¥–Ω–æ—Å—Ç–∏':

            sent_msg = bot.send_message(message.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –°—ç—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤",
                                        reply_markup=keyboard)
            bot.register_next_step_handler(sent_msg,
                                           number_of_hours_handler)  # Next message will call the name_handler function
        elif message.text == key_1:

            markup = types.InlineKeyboardMarkup(row_width=4)
            item0 = types.InlineKeyboardButton("–¢–°–î", callback_data='tsd')
            item1 = types.InlineKeyboardButton("–ù–∞—Ü–µ–Ω–∫–∞", callback_data='nacens')
            item2 = types.InlineKeyboardButton("–°–æ–∫—Ä–∞—â–µ–Ω–∏—è", callback_data='abbreviations')
            item3 = types.InlineKeyboardButton("–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è", callback_data='admission')
            markup.add(item0, item1, item2, item3)

            bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å?', reply_markup=markup)
        elif message.text == key_2:
            bot.send_message(message.chat.id, '–°–∫–ª–∞–¥—Å–∫–∏–µ –∞–∫—Ç—ã -> –£—Ü–µ–Ω–∫–∞ -> –ø–æ–Ω–∏–∂–µ–Ω–∏–µ —Å–æ—Ä—Ç–Ω–æ—Å—Ç–∏ -> (–Ω–∞ 20% –¥–µ—à–µ–≤–ª–µ ( '
                                              '—Å—É–º. —Ä–æ–∑—é –ø—Ä–∏—Ö) , –µ—Å–ª–∏ —Ç–æ–≤–∞—Ä —É–∂–µ —É—Ü–µ–Ω–µ–Ω–Ω—ã–π  —Ç–æ –µ–≥–æ —Ä–µ–∂—É—Ç –Ω–∞ –∫—É—Å–∫–∏ ('
                                              '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ —Å %) 4 —à—Ç => 79 —Ä—É–±. –ü—Ä–æ–ø–∏–∫–∞—Ç—å —Ç–æ–≤–∞—Ä, '
                                              '–¶–µ–Ω–Ω–∏–∫ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π')

            sent_msg = bot.send_message(message.chat.id, '–°—ç—Ä, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É —Ç–æ–≤–∞—Ä–∞')

            bot.register_next_step_handler(sent_msg,
                                           discount)
        elif message.text == key_3:
            bot.send_message(message.chat.id, '–í–µ—Å—ã 1, 4- —Å–ª–∞–¥–æ—Å—Ç–∏, –ø–µ—á–µ–Ω—å–µ, —Ç–æ—Ä—Ç—ã, –∫—Ä—É–ø—ã, —Å–∞—Ö–∞—Ä ( —Ç–æ —á—Ç–æ –≤ –º–µ—à–∫–∞—Ö '
                                              '–∫–≥)\n\n–í–µ—Å—ã 3,5 - –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω–æ–π –º—è—Å–æ, —Ä—ã–±–∞, –∑–∞–º–æ—Ä–æ–∂–µ–Ω–Ω—ã–µ —Ñ—Ä—É–∫—Ç–æ–≤—ã–µ '
                                              '–æ–≤–æ—â–Ω—ã–µ —Å–º–µ—Å–∏, —Å—ã—Ä—ã, —Ç–≤–æ—Ä–æ–∂–Ω—ã–µ –º–∞—Å—Å—ã, ( –≤—Å–µ —á—Ç–æ –Ω–µ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ –∫—Ä—É–ø–∞–º, '
                                              '–∏ –∫–æ–ª–±–∞—Å–∞–º, ) –∫–∞—Ç–ª–µ—Ç—ã, –ø–ª–µ–º–µ–Ω–∏)\n\n–í–µ—Å—ã –∫–æ–ª–±–∞—Å—ã - –∫–æ–ª–±–∞—Å—ã, –¥–ª–º, '
                                              '–º—è—Å–æ –∫–æ–ø—á–µ–Ω–æ–µ\n\n–ë–∞–∑—É –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≥—Ä—É–∑–∏—Ç—å –Ω–∞ –≤–µ—Å—ã!!!\n\n–ù–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç '
                                              '—Ç–æ–≤–∞—Ä. –ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞ - –∑–∞–π—Ç–∏ –≤ —Ç–æ–≤–∞—Ä (–ø–µ–ª–∏–º–µ–Ω–∏) - —Å–≤—è–∑–∞–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ - '
                                              '–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ ( –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å –≤–µ—Ä–Ω—ã–µ –≥–∞–ª–∫–∏).–ü–æ—Å–ª–µ –ø–æ–≥—Ä—É–∑–∏—Ç—å –Ω–∞ '
                                              '–æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ.–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –∫–∏–Ω—É—Ç—å –Ω–∞ –≤–µ—Å—ã —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–µ( –Ω—É–∂–Ω–æ –¥–ª—è '
                                              '—Ä–µ–≤–∏–∑–∏–∏)\n\n–°–∞–ª–∞—Ç—ã —Ü–µ–Ω–∞ –∑–∞ 0.1 –∫–≥ –≤—ã–±–∏—Ä–∞—Ç—å ( —É —Å–∞–ª–∞—Ç–æ–≤ –º–æ–∂–µ—Ç –Ω–µ –±—ã—Ç—å '
                                              '—à—Ç—Ä–∏—Ö–∫–æ–¥–∞, –Ω–∞–±–∏—Ä–∞—é—Ç –ø–æ —è—á–µ–π–∫–µ)\n–í–µ—Å—ã –∫–æ–ª–±–∞—Å—ã-—Å–∞–ª–∞—Ç—ã\n\n–¢–µ—Ñ—Ç–µ–ª–∏ - –º–∏—Ä '
                                              '–ø—Ä–æ–¥—É–∫—Ç–æ–≤!!!\n\n–ë–∞–∑–∞ - —Ç–µ—Ä–µ—â–µ–Ω–∫–æ\n–°—Ç—É–¥–µ–Ω—å = —Ö–æ–ª–æ–¥–µ—Ü\n\n–°–æ–≤—Å—Ç–≤–µ–Ω–æ–µ '
                                              '–ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ - –±–∞—Ä–∞–Ω–∫–µ–≤–∏—á, —Å—Ç–µ–±–∞–∫–æ–≤–∞, –≥–æ–ª—É–±–µ–Ω–∫–æ, —Ç–µ—Ä–µ—â–µ–Ω–∫–æ —Å.–∏.,'
                                              '–∂–∞—Ä–æ–≤–∞ ( 1 –Ω–∞–∫–ª–∞–¥–Ω–∞—è 7.7)\n–ë–∞–∑–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ ( –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥ '
                                              '–Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫–ª–∞–¥)\n\n–ï—Å–ª–∏ –µ—Å—Ç—å —Å—á—ë—Ç —Ñ–∞–∫—Ç—É—Ä–∞, —Ç–æ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ '
                                              '—Å—Ç–æ–ø–∫—É —Ä—è–¥–æ–º —Å –º—Ñ—É)\n\n–ü—Ä–æ–≤–µ—Ä—è—Ç—å –ø–æ–¥–ø–∏—Å—å —Å—Ç–∞—Ä—à–µ–≥–æ –ø—Ä–æ–¥–æ–≤—Ü–∞, '
                                              '–∏ –ø–µ—á–∞—Ç—å!–ö–æ–≥–¥–∞ 3 —à—Ç—É–∫–∏\n–°—Ç–∞—Ä—à–∏–π –ø—Ä–æ–¥–∞–≤–µ—Ü, –ê–Ω—è —Å –∫–æ—Ä–æ—Ç–∫–æ–π '
                                              '—Å—Ç—Ä–∏–∂–∫–æ–π\n\n–í–∏–∫–µ –≤ –¥–æ–ª–≥ –Ω–µ –¥–∞–≤–∞—Ç—å\n\n–ú–µ—Å—Ç–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ ( 1 —Ñ–∞–∫—Ç—É—Ä–∞ '
                                              '7.7) –≤ –ø–∞–ø–∫—É\n\n–õ—è–ø–∫–∏ –≤ –¥–æ–ª–≥: –ø–µ—á–∞—Ç—å —ç—Ç–∏–∫–µ—Ç–æ–∫ –∏ —Ü–µ–Ω–Ω–∏–∫–æ–≤ -> –≤—ã–±—Ä–∞—Ç—å '
                                              '—Ç–∏–ø —Ü–µ–Ω( –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ, —Ç–æ–≤–∞—Ä –±—É–¥–µ—Ç –±–µ–∑ —Ü–µ–Ω—ã) –¥–µ–ª–∞—Ç—å –≤ 2—Ö '
                                              '—ç–∫–∑–µ–º–ø–ª—è—Ä–∞—Ö, –æ–¥–∏–Ω –≤ 16:30 –¥–∏—Ä–µ–∫—Ç–æ—Ä—É –û–ª—å–≥–µ –í–∞–ª–µ—Ä—å–µ–≤–Ω–µ, –æ–¥–∏–Ω –æ—Ç–¥–∞—Ç—å –Ω–∞ '
                                              '—Ä—É–∫–∏ –±–µ—Ä—É—â–µ–º—É)\n\n–°–æ—Å—Ç–∞–≤—ã –Ω–∞ : —Å–∞–ª–∞—Ç—ã, –ø–µ—á–µ–Ω—å–µ, –∫–æ–Ω—Ñ–µ—Ç—ã, –∫–æ—Ç–ª–µ—Ç—ã, '
                                              '—Ñ–∞—Ä—à, ( —á—Ç–æ —Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª–∏ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å–æ—Å—Ç–∞–≤—ã)\n\n( –µ—Å–ª–∏ –º—ã '
                                              '–ø–µ—Ä–µ—Ñ–∞—Å–æ–≤—ã–≤–∞–µ–º –∏ –Ω–∞ —Ç–æ–≤–∞—Ä–µ –±—ã–ª —Å–æ—Å—Ç–∞–≤ —É–∫–∞–∑–∞–Ω)\n\n–¢–æ–≤–∞—Ä —Å –±–∞–∑—ã '
                                              '–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ v3 –∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ!!!!')
        elif message.text == key_4:
            bot.send_message(message.chat.id, '–ö–∞—Å—Å–∞. –ó–∞–ø—É—Å–∫ 1–° -> –í–æ–ª—á–∞–Ω–∫–æ–≤–∞(4212123), —Ä–æ–±–æ—Ç(111) - –æ—Ç–∫–ª—é—á–∏—Ç—å '
                                              '–∞–≤—Ç–æ–æ–±–º–µ–Ω -> –ø—Ä–∏–µ–º –¥–∞–Ω–Ω—ã—Ö. –í–æ–ª—á–∞–Ω–∫–æ–≤–∞ -> –ø—Ä–∏–µ–º –¥–∞–Ω–Ω—ã—Ö –∏–∑ POS -> –∫–∞—Å—Å–∞ '
                                              '2.11( –¥–µ–Ω—å –≤—á–µ—Ä–∞ –∏ —Å–µ–≥–æ–¥–Ω—è) -> –ø—Ä–æ—á–∏—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ -> –∑–∞–≥—Ä—É–∑–∏—Ç—å z –æ—Ç—á–µ—Ç ( '
                                              '—Ç–æ–∂–µ —Å–∞–º–æ–µ —Å –∫–∞—Å—Å–∞ 3.9)')

        elif message.text == "–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –æ—Ç –ò–ü –¢–ê–û":
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å  üò¢')
        else:
            pass  # bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å')


def discount(pm):  # pm - –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    try:
        x = (float(pm.text))
        discount_20 = 0.2
        number_of_hours = x - (x * discount_20)
        sent_msg = bot.send_message(pm.chat.id, f"–¶–µ–Ω–∞ –ø—Ä–∏ 20% —Å–∫–∏–¥–∫–µ:\n{(round(number_of_hours,2))} —Ä—É–±.")
    except ValueError:
        sent_msg = bot.send_message(pm.chat.id, f"–°—ç—Ä, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'tsd':
                bot.send_message(call.message.chat.id, info_1)
            elif call.data == 'nacens':
                bot.send_message(call.message.chat.id, info_2)
            elif call.data == 'abbreviations':
                bot.send_message(call.message.chat.id, info_3)
            elif call.data == 'admission':
                bot.send_message(call.message.chat.id, info_4)

    except Exception as e:
        print(repr(e))


####


# @bot.message_handler(content_types=['text'])
def welcome(pm):
    sent_msg = bot.send_message(pm.chat.id, "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –°—ç—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤",
                                reply_markup=keyboard)
    bot.register_next_step_handler(sent_msg,
                                   number_of_hours_handler)  # Next message will call the name_handler function


# @bot.message_handler(commands=["newkeyboard"])

def number_of_hours_handler(pm):
    try:
        number_of_hours = expiration_date(int(pm.text))
        sent_msg = bot.send_message(pm.chat.id, f"{number_of_hours}")
        # welcome(pm)
    except ValueError:
        sent_msg = bot.send_message(pm.chat.id, f"–°—ç—Ä, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞")
        # welcome(pm)
    # number_of_hours = pm.text

    # bot.register_next_step_handler(sent_msg, age_handler, number_of_hours)  # Next message will call the age_handler function


# def age_handler(pm, name):
#    age = pm.text
#    bot.send_message(pm.chat.id, f"Your name is {name}, and your age is {age}.", reply_markup=keyboard)
"""
@bot.message_handler(commands=["new_keyboard_for_all_users"])
def send_new_keyboard (message):
    keyboard = types.ReplyKeyboardMarkup() # –ù–æ–≤–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    for user in users_list:
        bot.send_message(user, '–ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ', reply_markup=keyboard)
"""

bot.polling(none_stop=True)

"""
@bot.message_handler(content_types=['text'])
def welcome(pm):
    sent_msg = bot.send_message(pm.chat.id, "Welcome to bot. what's your name?")
    bot.register_next_step_handler(sent_msg, name_handler)  # Next message will call the name_handler function


def name_handler(pm):
    name = pm.text
    sent_msg = bot.send_message(pm.chat.id, f"Your name is {name}. how old are you?")
    bot.register_next_step_handler(sent_msg, age_handler, name)  # Next message will call the age_handler function


def age_handler(pm, name):
    age = pm.text
    bot.send_message(pm.chat.id, f"Your name is {name}, and your age is {age}.")


bot.polling()
"""
"""
@bot.message_handler(commands=['start'])
def welcome(message):
    #sti = open('static/welcome.webp', 'rb')
   # bot.send_sticker(message.chat.id, sti)

    # keyboard
    markup = types.ReplyKeyboardMarkup(resize_keyboard=False)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("üòä –ö–∞–∫ –¥–µ–ª–∞?")
    item3 = types.KeyboardButton("–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –≥–æ–¥–Ω–æ—Å—Ç–∏")
    markup.add(item1, item2,item3)

    bot.send_message(message.chat.id,
                     "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –±—ã—Ç—å –ø–æ–¥–æ–ø—ã—Ç–Ω—ã–º –∫—Ä–æ–ª–∏–∫–æ–º.".format(
                         message.from_user, bot.get_me()),
                     parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def lalala(message):
    if message.chat.type == 'private':
        if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, str(random.randint(0, 100)))
        elif message.text == '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å—Ä–æ–∫–∞ –≥–æ–¥–Ω–æ—Å—Ç–∏':
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("24", callback_data='24')
            item2 = types.InlineKeyboardButton("36", callback_data='36')
            markup.add(item1, item2)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤', reply_markup=markup)
        elif message.text == 'üòä –ö–∞–∫ –¥–µ–ª–∞?':

            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton("–•–æ—Ä–æ—à–æ", callback_data='good')
            item2 = types.InlineKeyboardButton("–ù–µ –æ—á–µ–Ω—å", callback_data='bad')

            markup.add(item1, item2)

            bot.send_message(message.chat.id, '–û—Ç–ª–∏—á–Ω–æ, —Å–∞–º –∫–∞–∫?', reply_markup=markup)
        else:
            bot.send_message(message.chat.id, '–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ –æ—Ç–≤–µ—Ç–∏—Ç—å  üò¢')

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'good':
                bot.send_message(call.message.chat.id, '–í–æ—Ç –∏ –æ—Ç–ª–∏—á–Ω–µ–Ω—å–∫–æ üòä')
            elif call.data == 'bad':
                bot.send_message(call.message.chat.id, '–ë—ã–≤–∞–µ—Ç üò¢')
            #if call.data == '24':
            #    pass
            # remove inline buttons
            #bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="üòä –ö–∞–∫ –¥–µ–ª–∞?",
            #                      reply_markup=None)

            # show alert
            #bot.answer_callback_query(callback_query_id=call.id, show_alert=False,
            #                          text="–≠–¢–û –¢–ï–°–¢–û–í–û–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–ï!!11")

    except Exception as e:
        print(repr(e))


# RUN
bot.polling(none_stop=True)
"""
